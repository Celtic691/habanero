public partial class MachineType
{
    public Machine CreateMachine()
    {
        ClassDef machineClassDef = GetMachineClassDef();
        var machine = new Machine(machineClassDef) {MachineType = this};

        foreach (MachinePropertyDef machinePropertyDef in MachinePropertyDefs)
        {
            MachineProperty property = machine.MachineProperties.CreateBusinessObject();
            property.MachinePropertyDef = machinePropertyDef;
        }
        return machine;
    }
    
    public ClassDef GetMachineClassDef()
    {
        string machineTypeClassDefName = "Machine_" + Name;
        ClassDef machineClassDef;
        string machineAssemblyName = "MachineExample.BO";
        if (ClassDef.ClassDefs.Contains(machineAssemblyName, machineTypeClassDefName))
        {
            machineClassDef = ClassDef.ClassDefs[machineAssemblyName, machineTypeClassDefName];
            ClassDef.ClassDefs.Remove(machineClassDef);
        }
        machineClassDef = CreateNewMachineClassDef();
        ClassDef.ClassDefs.Add(machineClassDef);

        return machineClassDef;
    }

    private ClassDef CreateNewMachineClassDef()
    {
        ClassDef baseMachineClassDef = ClassDef.ClassDefs[typeof (Machine)];
        ClassDef machineClassDef = baseMachineClassDef.Clone();
        machineClassDef.TypeParameter = Name;

        UIDef uiDef = machineClassDef.UIDefCol["default"];
        UIGrid uiGrid = uiDef.UIGrid;
        UIForm form = uiDef.UIForm;
        form.Title = "Add/Edit a Machine";
        UIFormTab tab = form[0];
        UIFormColumn column = tab[0];

        foreach (MachinePropertyDef machinePropertyDef in MachinePropertyDefs)
        {
            var machinePropertyPropDef = new PropDef(machinePropertyDef.PropertyName, "System",
                                                     machinePropertyDef.PropertyType,
                                                     PropReadWriteRule.ReadWrite, "", null,
                                                     machinePropertyDef.IsCompulsory.Value, false);
            machinePropertyPropDef.Persistable = false;
            machineClassDef.PropDefcol.Add(machinePropertyPropDef);

            var uiProperty =
                new UIFormField(null, machinePropertyDef.PropertyName, "TextBox", "System.Windows.Forms", "", "",
                    true, "", new Hashtable(), null);
            column.Add(uiProperty);

            uiGrid.Add(new UIGridColumn(machinePropertyDef.PropertyName, machinePropertyDef.PropertyName, "", "",
                false, 100, UIGridColumn.PropAlignment.left, new Hashtable()));
        }

        return machineClassDef;
    }

}